#!/bin/bash
# Script de test pour le syst√®me de notifications
# Usage: ./test-notifications.sh

BASE_URL="http://localhost:8080"
SESSION_ID=""

echo "üß™ Test du Syst√®me de Notifications UniClubs"
echo "=============================================="

# Fonction pour faire une requ√™te avec session
make_request() {
    local method=$1
    local endpoint=$2
    local data=$3
    
    if [ -n "$SESSION_ID" ]; then
        curl -s -X $method "$BASE_URL$endpoint" \
            -H "Content-Type: application/json" \
            -H "Cookie: JSESSIONID=$SESSION_ID" \
            ${data:+-d "$data"}
    else
        curl -s -X $method "$BASE_URL$endpoint" \
            -H "Content-Type: application/json" \
            ${data:+-d "$data"}
    fi
}

# Test 1: V√©rifier que l'application d√©marre
echo "1. Test de d√©marrage de l'application..."
response=$(curl -s -o /dev/null -w "%{http_code}" "$BASE_URL/")
if [ "$response" = "200" ]; then
    echo "‚úÖ Application d√©marr√©e correctement"
else
    echo "‚ùå Application non accessible (HTTP $response)"
    exit 1
fi

# Test 2: V√©rifier l'endpoint WebSocket
echo "2. Test de l'endpoint WebSocket..."
response=$(curl -s -o /dev/null -w "%{http_code}" "$BASE_URL/ws/info")
if [ "$response" = "200" ]; then
    echo "‚úÖ Endpoint WebSocket accessible"
else
    echo "‚ùå Endpoint WebSocket non accessible (HTTP $response)"
fi

# Test 3: V√©rifier la page de connexion
echo "3. Test de la page de connexion..."
response=$(curl -s -o /dev/null -w "%{http_code}" "$BASE_URL/login")
if [ "$response" = "200" ]; then
    echo "‚úÖ Page de connexion accessible"
else
    echo "‚ùå Page de connexion non accessible (HTTP $response)"
fi

# Test 4: V√©rifier les endpoints API (sans authentification)
echo "4. Test des endpoints API..."
response=$(make_request "GET" "/api/notifications/count-non-lues")
if [[ "$response" == *"401"* ]] || [[ "$response" == *"Unauthorized"* ]]; then
    echo "‚úÖ Endpoints API prot√©g√©s correctement"
else
    echo "‚ùå Endpoints API non prot√©g√©s"
fi

# Test 5: V√©rifier la page d'historique
echo "5. Test de la page d'historique..."
response=$(curl -s -o /dev/null -w "%{http_code}" "$BASE_URL/api/notifications/page-historique")
if [ "$response" = "302" ] || [ "$response" = "200" ]; then
    echo "‚úÖ Page d'historique accessible"
else
    echo "‚ùå Page d'historique non accessible (HTTP $response)"
fi

echo ""
echo "üìã R√©sum√© des Tests"
echo "==================="
echo "‚úÖ Tests de base termin√©s"
echo ""
echo "üîê Pour tester les fonctionnalit√©s compl√®tes :"
echo "1. Connectez-vous √† l'application : $BASE_URL/login"
echo "2. Ouvrez la console d√©veloppeur (F12)"
echo "3. V√©rifiez les logs WebSocket"
echo "4. Testez les notifications en temps r√©el"
echo ""
echo "üìñ Consultez NOTIFICATION_TESTING_GUIDE.md pour les tests d√©taill√©s"

echo ""
echo "üéâ Tests de base termin√©s avec succ√®s !"
